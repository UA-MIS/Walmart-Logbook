@using System.Web.UI.WebControls
@model SecurityAssetManager.Models.ViewModels.CheckInOutViewModel
@Html.ValidationSummary(true)
@{
    ViewBag.Title = "CheckInOut";
}

@if (Model.Status == false)
{
    <h2>Check In </h2>
}
else
{
    <h2>Check Out</h2>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (User.IsInRole("Keyholder") && (User.Identity.Name == Model.Container.User.Email))
    {
        <div class="form-horizontal">
            <h4>Item</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ItemID)

            <div class="form-group">
                @Html.Label("Item Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Container", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ContainerName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Status == true)
                    {
                        <p>Checked In</p>
                    }
                    else
                    {
                        <p>Checked Out</p>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Barcode", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @if (Model.Status == false)
                {
                    @Html.LabelFor(model => model.NewBarcode, "New Barcode", htmlAttributes: new { @class = "control-label col-md-2" })
                }
                else
                {
                    @Html.LabelFor(model => model.NewBarcode, "Verify Barcode", htmlAttributes: new { @class = "control-label col-md-2" })
                }
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewBarcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewBarcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Witness, "Witness", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Witness, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.DropDownList("Witness", (IEnumerable<SelectListItem>)ViewBag.List, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.Witness, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="password">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="justification">
                @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    else
    {
        <h4>You don't have permission to perform this action for this item. Please contact its keyholder.</h4>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
