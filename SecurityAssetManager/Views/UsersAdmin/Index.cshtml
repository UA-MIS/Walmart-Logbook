@model List<SecurityAssetManager.Models.ViewModels.UserRoleViewModel>

@{
    ViewBag.Title = "Users";
}

<h2>List of Users</h2>
@*Clickable button to create new user*@
@if (User.IsInRole("Admin"))
{
<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>
}
@*Displays table of user's user name*@
<table id="users" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().User.UserName)
            </th>
            <th>
                @Html.DisplayName("Keyholder")
            </th>
            <th>
                @Html.DisplayName("Witness")
            </th>
            <th>
                @Html.DisplayName("Auditor")
            </th>
            <th>
                @Html.DisplayName("Admin")
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    @*Creates rows of checkboxes that indicate which roles user is in*@
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.User.UserName, "Details", new { id = item.User.Id })
                </td>
                <td>
                    @if (item.Roles.Contains("Keyholder"))
                    {
                        <input type="checkbox" disabled="disabled" checked="checked" value="a">
                    }
                    else
                    {
                        <input type="checkbox" disabled="disabled" value="b">
                    }
                </td>
                <td>
                    @if (item.Roles.Contains("Witness"))
                    {
                        <input type="checkbox" disabled="disabled" checked="checked">
                    }
                    else
                    {
                        <input type="checkbox" disabled="disabled">
                    }
                </td>
                <td>
                    @if (item.Roles.Contains("Auditor"))
                    {
                        <input type="checkbox" disabled="disabled" checked="checked">
                    }
                    else
                    {
                        <input type="checkbox" disabled="disabled">
                    }
                </td>
                <td>
                    @if (item.Roles.Contains("Admin"))
                    {
                        <input type="checkbox" disabled="disabled" checked="checked">
                    }
                    else
                    {
                        <input type="checkbox" disabled="disabled">
                    }
                </td>
                @if (User.IsInRole("Admin"))
                {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.User.Id })
                </td>
                }
            </tr>
        }
    </tbody>
</table>

@*Allows columns in table to be sortable*@
@*Allows objects in table to be searchable*@
@*Creates pagination*@
@section scripts
{

    <script>
        $.fn.dataTable.ext.order['dom-checkbox'] = function (settings, col) {
            return this.api().column(col, { order: 'index' }).nodes().map(function (td, i) {
                return $('input', td).prop('checked') ? '0' : '1';
            });
        }

        $(document).ready(function () {
            $('#users').DataTable({
                "columnDefs": [
                    { targets: [1, 2, 3, 4], orderDataType: 'dom-checkbox' },
                    { targets: 5, orderable: false}
                ]
            });
          
        });
    </script>
}


